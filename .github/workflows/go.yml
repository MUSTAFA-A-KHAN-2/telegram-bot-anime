# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3'

      - name: Build executable
        run: |
          go build -o telegram-bot-anime ./
          echo "Executable built:"
          ls -lh telegram-bot-anime

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: telegram-bot-anime
          path: telegram-bot-anime

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: telegram-bot-anime

      - name: Check available memory
        id: memcheck
        run: |
          # Minimum free memory required (MiB)
          MIN_MEM_MB=200

          # Fetch available memory in KiB â†’ convert to MiB
          AVAIL_KIB=$(grep MemAvailable /proc/meminfo | awk '{print $2}')
          AVAIL_MB=$(( AVAIL_KIB / 1024 ))

          echo "Available memory: ${AVAIL_MB} MiB (required: ${MIN_MEM_MB} MiB)"

          if [ "$AVAIL_MB" -lt "$MIN_MEM_MB" ]; then
            echo "::error::Not enough free memory to start telegram-bot-anime."
            exit 1
          fi

      - name: Run binary
        run: |
          chmod +x telegram-bot-anime
          echo "ðŸš€ Starting application..."
          ./telegram-bot-anime

    # - name: Test
    #   run: go test -v ./...
